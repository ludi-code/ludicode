Nom: MagieCarte
Type: Carte
Instructions: N,S,O,E
Explications: Trouver le chemin 
Board:
-,-,-,-,-,-,-,-,-,-
-,-,-,-,-,-,-,-,-,-
-,-,-,-,-,-,-,O,-,-
-,-,-,X,X,-,-,-,-,-
-,-,-,X,-,-,-,-,-,-
-,H,-,X,-,-,-,-,-,-
-,-,-,X,-,-,-,-,-,-
-,-,-,-,-,-,-,-,-,-
Max_instructions: 9
---------------------
Nom: IWantToBlockFree
Type: Block
Instructions acceptes: up, down, turn_left, turn_right, for_3, if_down_else, if_left
Explications: Atteigner la sortie
Board:
-,-,-,-,-,-,-,-,H,-
-,-,-,X,X,X,X,X,X,X
-,-,O,-,-,-,-,-,-,-
-,-,-,-,-,-,-,-,-,-
-,-,-,-,-,-,-,-,-,-
-,-,-,-,-,-,-,-,-,-
-,-,-,-,-,-,-,-,-,-
-,-,-,-,-,-,-,-,-,-
Max_instructions: 8
/*---------------------
Liste instructions disponibles pour Block: up, down, turn_left, turn_right, for_3, if_up, if_down, if_right, if_left, until_end, if_not_up, if_not_down, if_not_right, if_not_left, if_up_else, if_down_else, if_right_else, if_left_else, if_not_up_else, if_not_down_else, if_not_right_else, if_not_left_else
---------------------*/
Nom: PythonResque
Type: Python
Explications:
Faire un carré
Squelette:
# Toujours commencer vos programmes par ces trois lignes !
import turtle 
franklin = turtle.Turtle() 
franklin.shape('turtle')

# avancer de 100 pas
franklin.forward(100)
# tourner à gauche de 90°
franklin.left(90)
# avancer de 100 pas
franklin.forward(100)

# à compléter afin de dessiner un carré !
Code_solution:
import turtle 
franklin = turtle.Turtle() 
franklin.shape('turtle')

franklin.forward(100)
franklin.left(90)
franklin.forward(100)
franklin.left(90)
franklin.forward(100)
franklin.left(90)
franklin.forward(100)
